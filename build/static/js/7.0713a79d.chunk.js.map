{"version":3,"sources":["components/FavoriteButton/style.ts","containers/FavoriteButtonContainer.tsx","actions/addFav.ts","actions/delFav.ts","components/FavoriteButton/FavoriteButton.tsx","components/FilmPage/style.ts","containers/FilmPageContainer.tsx","actions/fetchMovie.ts","components/FilmPage/FilmPage.tsx"],"names":["AddToFav","styled","div","_templateObject","RemoveFromFav","_templateObject2","connect","state","favoriteIds","dispatch","stateProps","dispatchProps","ownProps","id","AddToFavorite","type","ActionTypeKeys","ADD_FAV_ID","payload","AddFav","DelFromFav","DEL_FAV_ID","delFav","isFavorite","data","includes","props","react_default","a","createElement","Fragment","onClick","FilmWrapper","style_templateObject","Name","h2","style_templateObject2","Poster","_templateObject3","Overview","p","_templateObject4","Description","_templateObject5","Genres","ul","_templateObject6","Genre","_templateObject7","Primary","_templateObject8","Secondary","_templateObject9","Rating","h3","_templateObject10","InfoColumn","_templateObject11","InfoRow","_templateObject12","movie","error","fetchData","_ref","Object","asyncToGenerator","regenerator_default","mark","_callee","res","wrap","_context","prev","next","GET_MOVIE_REQUEST","Axios","get","concat","API_KEY","sent","status","GET_MOVIE_SUCCESS","Error","status_code","t0","GET_ERROR","message","stop","_x","apply","this","arguments","fetchMovie","match","_props$movie","isLoading","urlId","params","isError","useEffect","window","scrollTo","bundle_default","height","width","count","title","overview","genres","vote_average","vote_count","release_date","tagline","revenue","budget","poster_path","genresLinks","map","genre","key","name","style","backgroundImage","FavoriteButtonContainer"],"mappings":"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","file":"static/js/7.0713a79d.chunk.js","sourcesContent":["import styled from 'styled-components'\r\n\r\nconst AddToFav = styled.div`\r\n\tbox-shadow: 0px 0px 4px 0px black;\r\n\tpadding: 10px;\r\n\tbox-sizing: border-box;\r\n\tmax-width: 200px;\r\n\ttransition: transform 0.1s ease-in;\r\n\t&:hover {\r\n\t\ttransform: scale(1.05);\r\n\t}\r\n\ttext-align: center;\r\n`\r\nconst RemoveFromFav = styled(AddToFav)``\r\n\r\nexport { AddToFav, RemoveFromFav }\r\n","import { connect } from 'react-redux'\r\nimport AddFav from '../actions/addFav'\r\nimport delFav from '../actions/delFav'\r\nimport FavoriteButton from '../components/FavoriteButton/FavoriteButton'\r\nimport { AppState } from '../reducers/main'\r\nimport * as State from '../reducers/State'\r\nimport { Dispatch } from 'redux'\r\n\r\ninterface StateFromProps {\r\n\tfavoriteIds: State.FavoriteIds;\r\n}\r\n\r\ninterface DispatchFromProps {\r\n\tdispatch: Dispatch;\r\n}\r\n\r\nexport interface MergeProps {\r\n\tAddToFavorite: () => void;\r\n\tDelFromFav: () => void;\r\n\tisFavorite: boolean;\r\n}\r\n\r\ninterface OwnProps {\r\n\tid: number;\r\n}\r\n\r\nconst mapStateToProps = (state: AppState) => {\r\n\tconst { favoriteIds } = state\r\n\treturn {\r\n\t\tfavoriteIds,\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchFromProps => {\r\n\treturn {\r\n\t\tdispatch,\r\n\t}\r\n}\r\n\r\nconst mergeProps = (stateProps: StateFromProps, dispatchProps: DispatchFromProps, ownProps: OwnProps): MergeProps => {\r\n\tconst { dispatch } = dispatchProps\r\n\tconst { favoriteIds } = stateProps\r\n\tconst { id } = ownProps\r\n\r\n\tconst AddToFavorite = () => {\r\n\t\tdispatch(AddFav(id))\r\n\t}\r\n\r\n\tconst DelFromFav = () => {\r\n\t\tdispatch(delFav(id))\r\n\t}\r\n\r\n\tconst isFavorite = favoriteIds.data.includes(id)\r\n\treturn {\r\n\t\tAddToFavorite,\r\n\t\tDelFromFav,\r\n\t\tisFavorite,\r\n\t}\r\n}\r\n\r\nexport default connect(\r\n\tmapStateToProps,\r\n\tmapDispatchToProps,\r\n\tmergeProps\r\n)(FavoriteButton)\r\n","import { ActionTypeKeys } from './ActionTypeKeys'\r\n\r\ninterface AddFavAction {\r\n\ttype: ActionTypeKeys.ADD_FAV_ID;\r\n\tpayload: number;\r\n}\r\n\r\nexport default function addFav(id: number): AddFavAction {\r\n\treturn {\r\n\t\ttype: ActionTypeKeys.ADD_FAV_ID,\r\n\t\tpayload: id,\r\n\t}\r\n}\r\n","import { ActionTypeKeys } from './ActionTypeKeys'\r\n\r\ninterface DelFavAction {\r\n\ttype: ActionTypeKeys.DEL_FAV_ID;\r\n\tpayload: number;\r\n}\r\n\r\nexport default function DelFav(id: number): DelFavAction {\r\n\treturn {\r\n\t\ttype: ActionTypeKeys.DEL_FAV_ID,\r\n\t\tpayload: id,\r\n\t}\r\n}\r\n","import React from 'react'\r\nimport { AddToFav, RemoveFromFav } from './style'\r\nimport { MergeProps as Props } from '../../containers/FavoriteButtonContainer'\r\n\r\nexport default function FavoriteButton(props: Props) {\r\n\tconst { AddToFavorite, DelFromFav, isFavorite } = props\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{isFavorite ? (\r\n\t\t\t\t<RemoveFromFav onClick={DelFromFav}>Remove favorite</RemoveFromFav>\r\n\t\t\t) : (\r\n\t\t\t\t<AddToFav onClick={AddToFavorite}>Add to favorite</AddToFav>\r\n\t\t\t)}\r\n\t\t</>\r\n\t)\r\n}\r\n","import styled from 'styled-components'\r\nconst FilmWrapper = styled.div`\r\n\tmargin: 0 auto;\r\n\tmargin-top: 70px;\r\n\tpadding: 20px;\r\n\tbox-sizing: border-box;\r\n\twidth: 80%;\r\n\tbackground-color: #f2f4f4;\r\n\t@media (max-width: 500px) {\r\n\t\twidth: 100%;\r\n\t\tpadding: 0px;\r\n\t}\r\n`\r\nconst Name = styled.h2`\r\n\tmargin: 0;\r\n\tfont-family: Geneva, Tahoma, Sedona, sans-serif;\r\n\tcolor: rgba(0, 0, 0, 0.87);\r\n\tfont-size: 1.22em;\r\n\tline-height: 1.03em;\r\n\tmargin-bottom: 1.03em;\r\n\tmargin-top: 1.03em;\r\n\tword-wrap: break-word;\r\n`\r\nconst Poster = styled.div`\r\n\twidth: 355px;\r\n\theight: 533px;\r\n\tbox-shadow: 0px 0px 20px -5px rgb(0, 0, 0, 0.85);\r\n\tbackground-size: cover;\r\n\tflex-shrink: 0;\r\n\t@media (max-width: 500px) {\r\n\t\twidth: 225px;\r\n\t\theight: 337px;\r\n\t}\r\n`\r\n\r\nconst Overview = styled.p`\r\n\tmargin: 0;\r\n\tfont-size: 1em;\r\n\tfont-family: Geneva, Tahoma, Verdana, sans-serif;\r\n\tline-height: 1.18em;\r\n\tword-wrap: break-word;\r\n`\r\n\r\nconst Description = styled.div`\r\n\tfont-size: 24px;\r\n\tpadding-left: 20px;\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tjustify-content: flex-start;\r\n\t@media (max-width: 500px) {\r\n\t\tfont-size: 15px;\r\n\t\tpadding-left: 0px;\r\n\t}\r\n`\r\n\r\nconst Genres = styled.ul`\r\n\tlist-style: none;\r\n\tmargin: 0;\r\n\tpadding: 0;\r\n\tdisplay: flex;\r\n\tflex-direction: row;\r\n\tflex-wrap: wrap;\r\n\tmargin-top: auto;\r\n\tmargin-bottom: 20px;\r\n`\r\n\r\nconst Genre = styled.div`\r\n\ttext-decoration: none;\r\n\tcolor: rgba(0, 0, 0, 0.87);\r\n\tborder-radius: 10px;\r\n\tbox-shadow: 0px 0px 10px 0px rgb(0, 0, 0, 0.85);\r\n\tpadding: 5px;\r\n\tmargin: 0 10px;\r\n\tbox-sizing: border-box;\r\n`\r\n\r\nconst Primary = styled.div`\r\n\tdisplay: flex;\r\n\tflex-direction: row;\r\n\tbox-shadow: 0px 0px 20px 0px black;\r\n\t@media (max-width: 950px) {\r\n\t\tflex-direction: column;\r\n\t\talign-items: center;\r\n\t}\r\n\t@media (max-width: 950px) {\r\n\t\tpadding: 10px;\r\n\t}\r\n`\r\n\r\nconst Secondary = styled(Primary)`\r\n\tmargin-top: 24px;\r\n\tfont-size: 20px;\r\n\tdisplay: flex;\r\n\tflex-direction: row;\r\n`\r\n\r\nconst Rating = styled.h3`\r\n\tmargin: 0;\r\n\tpadding: 0;\r\n\tmargin-top: auto;\r\n\tmargin-bottom: 20px;\r\n`\r\nconst InfoColumn = styled.div`\r\n\twidth: 50%;\r\n\tfont-family: Geneva, Tahoma, Verdana, sans-serif;\r\n\tfont-size: 1.22em;\r\n\tword-wrap: break-word;\r\n\t> :nth-child(2n + 1) {\r\n\t\tbackground-color: #c9d8d8;\r\n\t}\r\n`\r\n\r\nconst InfoRow = styled.div`\r\n\tmin-height: 1.5em;\r\n\twidth: 100%;\r\n\tpadding: 5px;\r\n\tbox-sizing: border-box;\r\n`\r\n\r\nexport {\r\n\tFilmWrapper,\r\n\tName,\r\n\tPoster,\r\n\tOverview,\r\n\tDescription,\r\n\tGenres,\r\n\tGenre,\r\n\tPrimary,\r\n\tSecondary,\r\n\tRating,\r\n\tInfoColumn,\r\n\tInfoRow,\r\n}\r\n","import { connect } from 'react-redux'\r\nimport FilmPage from '../components/FilmPage/FilmPage'\r\nimport fetchMovie from '../actions/fetchMovie'\r\nimport { AppState } from '../reducers/main'\r\nimport * as State from '../reducers/State'\r\nimport { ThunkDispatch } from 'redux-thunk'\r\nimport { Action } from 'redux'\r\nimport { RouteComponentProps, match } from 'react-router-dom'\r\n\r\ninterface StateFromProps {\r\n\tmovie: State.Movie;\r\n\terror: State.Error;\r\n}\r\n\r\ninterface DispatchFromProps {\r\n\tdispatch: ThunkDispatch<AppState, null, Action<string>>;\r\n}\r\n\r\ninterface RouterParams {\r\n\tid?: string;\r\n}\r\n\r\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\r\ninterface OwnProps extends RouteComponentProps {}\r\n\r\nexport interface MergeProps {\r\n\tmovie: State.Movie;\r\n\terror: State.Error;\r\n\tfetchData: (id: number) => void;\r\n\tmatch: match<RouterParams>;\r\n}\r\n\r\nconst mapStateToProps = (state: AppState): StateFromProps => {\r\n\tconst { movie, error } = state\r\n\treturn {\r\n\t\tmovie,\r\n\t\terror,\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: ThunkDispatch<AppState, null, Action<string>>): DispatchFromProps => {\r\n\treturn {\r\n\t\tdispatch,\r\n\t}\r\n}\r\n\r\nconst mergeProps = (stateProps: StateFromProps, dispatchProps: DispatchFromProps, ownProps: OwnProps): MergeProps => {\r\n\tconst { dispatch } = dispatchProps\r\n\tconst { movie, error } = stateProps\r\n\tconst { match } = ownProps\r\n\tconst fetchData = (id: number) => {\r\n\t\tdispatch(fetchMovie(id))\r\n\t}\r\n\treturn {\r\n\t\tmovie,\r\n\t\terror,\r\n\t\tfetchData,\r\n\t\tmatch,\r\n\t}\r\n}\r\n\r\nexport default connect(\r\n\tmapStateToProps,\r\n\tmapDispatchToProps,\r\n\tmergeProps\r\n)(FilmPage)\r\n","import { Action } from 'redux'\r\nimport { API_KEY } from '../constants/constants'\r\nimport { ActionTypeKeys } from './ActionTypeKeys'\r\nimport { ThunkAction } from 'redux-thunk'\r\nimport { AppState } from '../reducers/main'\r\nimport { SpecifyMovie } from '../models/SpecifyMovie'\r\nimport Axios from '../constants/axios'\r\n\r\nexport default function fetchMovie(id: number): ThunkAction<void, AppState, null, Action<string>> {\r\n\treturn async dispatch => {\r\n\t\tdispatch({\r\n\t\t\ttype: ActionTypeKeys.GET_MOVIE_REQUEST,\r\n\t\t})\r\n\t\ttry {\r\n\t\t\tlet res = await Axios.get(`/movie/${id}?api_key=${API_KEY}`)\r\n\t\t\tif (res.status === 200) {\r\n\t\t\t\tconst { data }: { data: SpecifyMovie } = res\r\n\t\t\t\tdispatch({\r\n\t\t\t\t\ttype: ActionTypeKeys.GET_MOVIE_SUCCESS,\r\n\t\t\t\t\tpayload: data,\r\n\t\t\t\t})\r\n\t\t\t} else {\r\n\t\t\t\tthrow new Error(res.data.status_code)\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: ActionTypeKeys.GET_ERROR,\r\n\t\t\t\tpayload: err.message,\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n}\r\n","import React from 'react'\r\nimport { useEffect } from 'react'\r\nimport FavoriteButtonContainer from '../../containers/FavoriteButtonContainer'\r\nimport Skeleton from 'react-loading-skeleton'\r\nimport { MergeProps as Props } from '../../containers/FilmPageContainer'\r\n\r\nimport {\r\n\tFilmWrapper,\r\n\tName,\r\n\tPoster,\r\n\tOverview,\r\n\tDescription,\r\n\tGenres,\r\n\tGenre,\r\n\tPrimary,\r\n\tSecondary,\r\n\tRating,\r\n\tInfoColumn,\r\n\tInfoRow,\r\n} from './style'\r\n\r\nexport default function FilmPage(props: Props) {\r\n\tconst { error, fetchData } = props\r\n\tconst { isLoading, data } = props.movie\r\n\tconst { id: urlId } = props.match.params\r\n\tif (error.isError) {\r\n\t\tthrow Error(error.error)\r\n\t}\r\n\tif (!urlId) {\r\n\t\tthrow Error('Film ID is undefined')\r\n\t}\r\n\tuseEffect(() => {\r\n\t\tfetchData(+urlId)\r\n\t\twindow.scrollTo(0, 0)\r\n\t}, [urlId]) //eslint-disable-line\r\n\tif (isLoading || data === null) {\r\n\t\treturn (\r\n\t\t\t<FilmWrapper>\r\n\t\t\t\t<Primary>\r\n\t\t\t\t\t<Poster>\r\n\t\t\t\t\t\t<Skeleton height={533} />\r\n\t\t\t\t\t</Poster>\r\n\t\t\t\t\t<Description>\r\n\t\t\t\t\t\t<Name>\r\n\t\t\t\t\t\t\t<Skeleton height={30} width={200} />\r\n\t\t\t\t\t\t</Name>\r\n\t\t\t\t\t\t<Overview>\r\n\t\t\t\t\t\t\t<Skeleton count={15} width={300} />\r\n\t\t\t\t\t\t</Overview>\r\n\t\t\t\t\t</Description>\r\n\t\t\t\t</Primary>\r\n\t\t\t</FilmWrapper>\r\n\t\t)\r\n\t}\r\n\tconst {\r\n\t\ttitle,\r\n\t\toverview,\r\n\t\tgenres,\r\n\t\tvote_average,\r\n\t\tvote_count,\r\n\t\trelease_date,\r\n\t\ttagline,\r\n\t\trevenue,\r\n\t\tbudget,\r\n\t\tposter_path,\r\n\t\tstatus,\r\n\t\tid,\r\n\t} = data\r\n\tconst genresLinks = genres.map(genre => (\r\n\t\t<li key={genre.id}>\r\n\t\t\t<Genre>{genre.name}</Genre>\r\n\t\t</li>\r\n\t))\r\n\treturn (\r\n\t\t<FilmWrapper>\r\n\t\t\t<Primary>\r\n\t\t\t\t<Poster\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tbackgroundImage: `url(https://image.tmdb.org/t/p/w500/${poster_path})`,\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t\t<Description>\r\n\t\t\t\t\t<Name>{title}</Name>\r\n\t\t\t\t\t<Overview>{overview}</Overview>\r\n\t\t\t\t\t<Rating>\r\n\t\t\t\t\t\tRating: {vote_average}\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\tVote count: {vote_count}\r\n\t\t\t\t\t</Rating>\r\n\t\t\t\t\t<FavoriteButtonContainer id={id} />\r\n\t\t\t\t\t<Genres>\r\n\t\t\t\t\t\tGenres:\r\n\t\t\t\t\t\t{genresLinks}\r\n\t\t\t\t\t</Genres>\r\n\t\t\t\t</Description>\r\n\t\t\t</Primary>\r\n\t\t\t<Secondary>\r\n\t\t\t\t<InfoColumn>\r\n\t\t\t\t\t<InfoRow>Release date: {release_date || '-'}</InfoRow>\r\n\t\t\t\t\t<InfoRow>Status: {status || '-'}</InfoRow>\r\n\t\t\t\t\t<InfoRow>Tagline: {tagline || '-'}</InfoRow>\r\n\t\t\t\t</InfoColumn>\r\n\t\t\t\t<InfoColumn>\r\n\t\t\t\t\t<InfoRow>Budget: ${budget || '-'}</InfoRow>\r\n\t\t\t\t\t<InfoRow>Revenue: ${revenue || '-'}</InfoRow>\r\n\t\t\t\t</InfoColumn>\r\n\t\t\t</Secondary>\r\n\t\t</FilmWrapper>\r\n\t)\r\n}\r\n"],"sourceRoot":""}